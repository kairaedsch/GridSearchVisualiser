@import url('fonts/openSans.css');

:root {
  --node-size: 62px;
  --node-part-height: 10px;
  --node-part-shadow: 14px;
  --color-main: #0095FF;
  --color-main-dark: #007ce6;
  --color-main-darker: #004d8f;
  --color-main-light: #5bbaff;
  --color-second: #CA0404;
}

*, *:before, *:after {
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  font-size: 20px;
  color: #333;
}

html, body {
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

#content {

}

#leftContent, #rightContent {
  width: 50%;
  float: left;
  height: 100vh;
  overflow: hidden;
}

#leftContent {

}

#rightContent {
  border-left: 1px solid #DDD;
}

.grid {
  background: white;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.grid .row {
  width: 100%;
}

.node {
  float: left;
  width: var(--node-size);
  height: var(--node-size);

  background: white;
  border: 1px solid;
  border-color: #EEE;
  animation: nodeChange 0.2s ease-out 1;
}

.grid.BASIC .node.totalBlocked {
  background: var(--color-main);
  border-color: var(--color-main-dark);
  animation-name: nodeChangeBlocked;
}

.grid.BASIC .node:hover, .node.hover {
  border-color: var(--color-main-light);
}

.grid.BASIC .node.totalBlocked:hover, .node.totalBlocked.hover {
  border-color: var(--color-main-darker);
}

.grid.BASIC .node {
  cursor: pointer;
}

.grid.BASIC .node.SOURCE_NODE, .grid.BASIC .node.TARGET_NODE {
  cursor: move;
}

.grid .node.SOURCE_NODE.hover {
  border-color: #2AB936;
}

.grid .node.TARGET_NODE.hover {
  border-color: var(--color-second);
}

@keyframes nodeChange {
  0%   {transform: scale(1);}
  10%  {transform: scale(1.20);}
  100% {transform: scale(1);}
}

@keyframes nodeChangeBlocked {
  0%   {transform: scale(1);}
  10%  {transform: scale(1.20);}
  100% {transform: scale(1);}
}

.grid .node .part, .grid .node .innerpart {
  width: calc(100%/3 - 2px);
  height: calc(100%/3 - 2px);
  float: left;
  margin: 1px;
}

.grid.ADVANCED .node .part {
  opacity: 0;
  cursor: pointer;
  background-size: contain;
  background-repeat: no-repeat;
}

.grid.ADVANCED .node .part.NORTH {
  background-image: url("images/nodePartNorth.svg");
}

.grid.ADVANCED .node .part.NORTH_EAST {
  background-image: url("images/nodePartNorthEast.svg");
}

.grid.ADVANCED .node .part.EAST {
  background-image: url("images/nodePartNorth.svg");
  transform: rotate(90deg);
}

.grid.ADVANCED .node .part.SOUTH_EAST {
  background-image: url("images/nodePartNorthEast.svg");
  transform: rotate(90deg);
}

.grid.ADVANCED .node .part.SOUTH {
  background-image: url("images/nodePartNorth.svg");
  transform: rotate(180deg);
}

.grid.ADVANCED .node .part.SOUTH_WEST {
  background-image: url("images/nodePartNorthEast.svg");
  transform: rotate(180deg);
}

.grid.ADVANCED .node .part.WEST {
  background-image: url("images/nodePartNorth.svg");
  transform: rotate(270deg);
}

.grid.ADVANCED .node .part.NORTH_WEST {
  background-image: url("images/nodePartNorthEast.svg");
  transform: rotate(270deg);
}

.grid.ADVANCED .node.mouseUp .part:hover {
  opacity: 0.5;
  animation: nodeHover 1s linear infinite;
}

@keyframes nodeHover {
  0%   {opacity: 0.8;}
  25%  {opacity: 0.8;}
  50%  {opacity: 0.2;}
  75%  {opacity: 0.8;}
  100% {opacity: 0.8;}
}

.grid.ADVANCED .node .part.blocked {
  opacity: 1;
}

.grid .node.SOURCE_NODE .innerpart, .grid .node.TARGET_NODE .innerpart {
  border-radius: 100%;
  cursor: move;
}

.grid .node.SOURCE_NODE .innerpart {
  background: #2AB936;
}

.grid .node.TARGET_NODE .innerpart {
  background: var(--color-second);
}

.dropDown {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.dropDown .value {
  padding: 5px 33px 5px 8px;
  font-size: 16px;

  cursor: pointer;
  background: var(--color-main-light);
  color: #FFF;
}

.dropDown .value.selected, .dropDown .value.current {
  background: var(--color-main);
}

.dropDown .value:hover {
   background: var(--color-main-dark);
}

.dropDown .value.current {
  border-radius: 3px;
  background-image: url("images/dropDownArrowClosed.svg");
  background-repeat: no-repeat;
  background-position: center right 10px;
  background-size: 15px;
}

.dropDown.open .value.current {
  background-image: url("images/dropDownArrowOpen.svg");
}

.dropDown .drop {
  position: absolute;
  padding-top: 5px;
  min-width: 100px;
  display: none;
}

.dropDown.open .drop {
  display: block;
}

.dropDown .arrowLine {
  height: 10px;

  background: url("images/dropDownDropArrow.svg");
  background-position: center left 10px;
  background-repeat: no-repeat;
}

.dropDown .values {
  overflow: hidden;

  border-radius: 3px;
  background: #FFF;
  border: 1px solid #FFF;
  border-top: none;
}

.dropDown .values .value:nth-child(n+2) {
  border-top-width: 0;
}

.menu {
  padding: 10px;
  border-bottom: 1px solid #DDD;
}

.menu>.title {
  font-size: 26px;
  font-weight: 600;
  text-align: center;
  padding-bottom: 10px;
}

.configs {
  display: flex;
}

.config {
  flex-basis: calc(100%/3);
  padding-right: 10px;
  min-width: 0;

  display: flex;
}

.config:last-child {
  padding-right: 0;
}

.config .title {
  min-width: 0;
  padding-right: 10px;

  font-weight: 600;
  line-height: 150%;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.config .dropDown {
  flex-shrink: 0;
  margin-right: auto;
}

.button {
  padding: 5px 8px 5px 30px;
  font-size: 16px;

  border-radius: 3px;
  cursor: pointer;
  color: #FFF;
  background-color: var(--color-main);
  background-image: url("images/run.svg");
  background-position: center left 8px;
  background-repeat: no-repeat;
  background-size: 15px;
  margin: auto;
}

.button:hover {
  background-color: var(--color-main-dark);
}
